//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_30
.address_size 64

	// .globl	__raygen__rg
.const .align 8 .b8 params[72];

.visible .entry __raygen__rg(

)
{
	.reg .pred 	%p<55>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<398>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<9>;


	// inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	ld.const.v2.f32 	{%f52, %f53}, [params+24];
	mov.u32 	%r14, 0;
	mov.u32 	%r13, 1;
	ld.const.v2.f32 	{%f55, %f56}, [params+32];
	ld.const.v2.f32 	{%f59, %f60}, [params+40];
	ld.const.v2.f32 	{%f63, %f64}, [params+48];
	ld.const.v2.f32 	{%f67, %f68}, [params+56];
	cvt.rn.f32.u32	%f71, %r1;
	cvt.rn.f32.u32	%f72, %r4;
	div.rn.f32 	%f73, %f71, %f72;
	cvt.rn.f32.u32	%f74, %r2;
	cvt.rn.f32.u32	%f75, %r5;
	div.rn.f32 	%f76, %f74, %f75;
	fma.rn.f32 	%f77, %f73, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f78, %f76, 0f40000000, 0fBF800000;
	ld.const.v2.f32 	{%f79, %f80}, [params+16];
	mul.f32 	%f81, %f59, %f78;
	mul.f32 	%f82, %f60, %f78;
	mul.f32 	%f83, %f63, %f78;
	fma.rn.f32 	%f84, %f53, %f77, %f81;
	fma.rn.f32 	%f85, %f55, %f77, %f82;
	fma.rn.f32 	%f86, %f56, %f77, %f83;
	add.f32 	%f87, %f64, %f84;
	add.f32 	%f88, %f67, %f85;
	add.f32 	%f89, %f68, %f86;
	mul.f32 	%f90, %f88, %f88;
	fma.rn.f32 	%f91, %f87, %f87, %f90;
	fma.rn.f32 	%f92, %f89, %f89, %f91;
	sqrt.rn.f32 	%f93, %f92;
	rcp.rn.f32 	%f94, %f93;
	mul.f32 	%f44, %f94, %f87;
	mul.f32 	%f45, %f94, %f88;
	mul.f32 	%f46, %f94, %f89;
	ld.const.u64 	%rd3, [params+64];
	mov.u32 	%r10, 255;
	mov.f32 	%f48, 0f5A0E1BCA;
	mov.f32 	%f49, 0f00000000;
	// inline asm
	call (%r7, %r8, %r9), _optix_trace_3, (%rd3, %f79, %f80, %f52, %f44, %f45, %f46, %f49, %f48, %f49, %r10, %r14, %r14, %r13, %r14, %r18, %r19, %r20);
	// inline asm
	mov.b32 	 %f95, %r7;
	mov.b32 	 %f96, %r8;
	mov.b32 	 %f97, %r9;
	ld.const.u32 	%r21, [params+8];
	mad.lo.s32 	%r22, %r21, %r2, %r1;
	cvt.u64.u32	%rd2, %r22;
	mov.f32 	%f98, 0f3F800000;
	min.f32 	%f99, %f95, %f98;
	max.f32 	%f1, %f49, %f99;
	min.f32 	%f100, %f96, %f98;
	max.f32 	%f2, %f49, %f100;
	min.f32 	%f101, %f97, %f98;
	max.f32 	%f3, %f49, %f101;
	mov.f32 	%f105, 0f3ED55555;
	abs.f32 	%f5, %f1;
	setp.lt.f32	%p4, %f5, 0f00800000;
	mul.f32 	%f107, %f5, 0f4B800000;
	selp.f32	%f108, 0fC3170000, 0fC2FE0000, %p4;
	selp.f32	%f109, %f107, %f5, %p4;
	mov.b32 	 %r23, %f109;
	and.b32  	%r24, %r23, 8388607;
	or.b32  	%r25, %r24, 1065353216;
	mov.b32 	 %f110, %r25;
	shr.u32 	%r26, %r23, 23;
	cvt.rn.f32.u32	%f111, %r26;
	add.f32 	%f112, %f108, %f111;
	setp.gt.f32	%p5, %f110, 0f3FB504F3;
	mul.f32 	%f113, %f110, 0f3F000000;
	add.f32 	%f114, %f112, 0f3F800000;
	selp.f32	%f115, %f113, %f110, %p5;
	selp.f32	%f116, %f114, %f112, %p5;
	add.f32 	%f117, %f115, 0fBF800000;
	add.f32 	%f51, %f115, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f50,%f51;
	// inline asm
	add.f32 	%f118, %f117, %f117;
	mul.f32 	%f119, %f50, %f118;
	mul.f32 	%f120, %f119, %f119;
	mov.f32 	%f121, 0f3C4CAF63;
	mov.f32 	%f122, 0f3B18F0FE;
	fma.rn.f32 	%f123, %f122, %f120, %f121;
	mov.f32 	%f124, 0f3DAAAABD;
	fma.rn.f32 	%f125, %f123, %f120, %f124;
	mul.rn.f32 	%f126, %f125, %f120;
	mul.rn.f32 	%f127, %f126, %f119;
	sub.f32 	%f128, %f117, %f119;
	neg.f32 	%f129, %f119;
	add.f32 	%f130, %f128, %f128;
	fma.rn.f32 	%f131, %f129, %f117, %f130;
	mul.rn.f32 	%f132, %f50, %f131;
	add.f32 	%f133, %f127, %f119;
	sub.f32 	%f134, %f119, %f133;
	add.f32 	%f135, %f127, %f134;
	add.f32 	%f136, %f132, %f135;
	add.f32 	%f137, %f133, %f136;
	sub.f32 	%f138, %f133, %f137;
	add.f32 	%f139, %f136, %f138;
	mov.f32 	%f140, 0f3F317200;
	mul.rn.f32 	%f141, %f116, %f140;
	mov.f32 	%f142, 0f35BFBE8E;
	mul.rn.f32 	%f143, %f116, %f142;
	add.f32 	%f144, %f141, %f137;
	sub.f32 	%f145, %f141, %f144;
	add.f32 	%f146, %f137, %f145;
	add.f32 	%f147, %f139, %f146;
	add.f32 	%f148, %f143, %f147;
	add.f32 	%f149, %f144, %f148;
	sub.f32 	%f150, %f144, %f149;
	add.f32 	%f151, %f148, %f150;
	mul.rn.f32 	%f152, %f105, %f149;
	neg.f32 	%f153, %f152;
	fma.rn.f32 	%f154, %f105, %f149, %f153;
	fma.rn.f32 	%f155, %f105, %f151, %f154;
	fma.rn.f32 	%f156, %f49, %f149, %f155;
	add.rn.f32 	%f157, %f152, %f156;
	neg.f32 	%f158, %f157;
	add.rn.f32 	%f159, %f152, %f158;
	add.rn.f32 	%f160, %f159, %f156;
	mov.b32 	 %r27, %f157;
	setp.eq.s32	%p6, %r27, 1118925336;
	add.s32 	%r28, %r27, -1;
	mov.b32 	 %f161, %r28;
	add.f32 	%f162, %f160, 0f37000000;
	selp.f32	%f163, %f161, %f157, %p6;
	selp.f32	%f6, %f162, %f160, %p6;
	mul.f32 	%f164, %f163, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f165, %f164;
	mov.f32 	%f166, 0fBF317200;
	fma.rn.f32 	%f167, %f165, %f166, %f163;
	mov.f32 	%f168, 0fB5BFBE8E;
	fma.rn.f32 	%f169, %f165, %f168, %f167;
	mul.f32 	%f170, %f169, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f171, %f170;
	add.f32 	%f172, %f165, 0f00000000;
	ex2.approx.f32 	%f173, %f172;
	mul.f32 	%f174, %f171, %f173;
	setp.lt.f32	%p7, %f163, 0fC2D20000;
	selp.f32	%f175, 0f00000000, %f174, %p7;
	setp.gt.f32	%p8, %f163, 0f42D20000;
	selp.f32	%f389, 0f7F800000, %f175, %p8;
	setp.eq.f32	%p9, %f389, 0f7F800000;
	@%p9 bra 	BB0_2;

	fma.rn.f32 	%f389, %f389, %f6, %f389;

BB0_2:
	mov.f32 	%f365, 0f3E555555;
	cvt.rzi.f32.f32	%f364, %f365;
	add.f32 	%f363, %f364, %f364;
	mov.f32 	%f362, 0f3ED55555;
	sub.f32 	%f361, %f362, %f363;
	abs.f32 	%f360, %f361;
	setp.lt.f32	%p10, %f1, 0f00000000;
	setp.eq.f32	%p11, %f360, 0f3F800000;
	and.pred  	%p1, %p10, %p11;
	mov.b32 	 %r29, %f389;
	xor.b32  	%r30, %r29, -2147483648;
	mov.b32 	 %f176, %r30;
	selp.f32	%f391, %f176, %f389, %p1;
	setp.eq.f32	%p12, %f1, 0f00000000;
	@%p12 bra 	BB0_5;
	bra.uni 	BB0_3;

BB0_5:
	add.f32 	%f179, %f1, %f1;
	selp.f32	%f391, %f179, 0f00000000, %p11;
	bra.uni 	BB0_6;

BB0_3:
	setp.geu.f32	%p13, %f1, 0f00000000;
	@%p13 bra 	BB0_6;

	mov.f32 	%f388, 0f3ED55555;
	cvt.rzi.f32.f32	%f178, %f388;
	setp.neu.f32	%p14, %f178, 0f3ED55555;
	selp.f32	%f391, 0f7FFFFFFF, %f391, %p14;

BB0_6:
	add.f32 	%f180, %f5, 0f3ED55555;
	mov.b32 	 %r31, %f180;
	setp.lt.s32	%p16, %r31, 2139095040;
	@%p16 bra 	BB0_11;

	setp.gtu.f32	%p17, %f5, 0f7F800000;
	@%p17 bra 	BB0_10;
	bra.uni 	BB0_8;

BB0_10:
	add.f32 	%f391, %f1, 0f3ED55555;
	bra.uni 	BB0_11;

BB0_8:
	setp.neu.f32	%p18, %f5, 0f7F800000;
	@%p18 bra 	BB0_11;

	selp.f32	%f391, 0fFF800000, 0f7F800000, %p1;

BB0_11:
	mov.f32 	%f374, 0fB5BFBE8E;
	mov.f32 	%f373, 0fBF317200;
	mov.f32 	%f372, 0f00000000;
	mov.f32 	%f371, 0f35BFBE8E;
	mov.f32 	%f370, 0f3F317200;
	mov.f32 	%f369, 0f3DAAAABD;
	mov.f32 	%f368, 0f3C4CAF63;
	mov.f32 	%f367, 0f3B18F0FE;
	mov.f32 	%f366, 0f3ED55555;
	abs.f32 	%f17, %f2;
	setp.lt.f32	%p19, %f17, 0f00800000;
	mul.f32 	%f183, %f17, 0f4B800000;
	selp.f32	%f184, 0fC3170000, 0fC2FE0000, %p19;
	selp.f32	%f185, %f183, %f17, %p19;
	mov.b32 	 %r32, %f185;
	and.b32  	%r33, %r32, 8388607;
	or.b32  	%r34, %r33, 1065353216;
	mov.b32 	 %f186, %r34;
	shr.u32 	%r35, %r32, 23;
	cvt.rn.f32.u32	%f187, %r35;
	add.f32 	%f188, %f184, %f187;
	setp.gt.f32	%p20, %f186, 0f3FB504F3;
	mul.f32 	%f189, %f186, 0f3F000000;
	add.f32 	%f190, %f188, 0f3F800000;
	selp.f32	%f191, %f189, %f186, %p20;
	selp.f32	%f192, %f190, %f188, %p20;
	add.f32 	%f193, %f191, 0fBF800000;
	add.f32 	%f182, %f191, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f181,%f182;
	// inline asm
	add.f32 	%f194, %f193, %f193;
	mul.f32 	%f195, %f181, %f194;
	mul.f32 	%f196, %f195, %f195;
	fma.rn.f32 	%f199, %f367, %f196, %f368;
	fma.rn.f32 	%f201, %f199, %f196, %f369;
	mul.rn.f32 	%f202, %f201, %f196;
	mul.rn.f32 	%f203, %f202, %f195;
	sub.f32 	%f204, %f193, %f195;
	neg.f32 	%f205, %f195;
	add.f32 	%f206, %f204, %f204;
	fma.rn.f32 	%f207, %f205, %f193, %f206;
	mul.rn.f32 	%f208, %f181, %f207;
	add.f32 	%f209, %f203, %f195;
	sub.f32 	%f210, %f195, %f209;
	add.f32 	%f211, %f203, %f210;
	add.f32 	%f212, %f208, %f211;
	add.f32 	%f213, %f209, %f212;
	sub.f32 	%f214, %f209, %f213;
	add.f32 	%f215, %f212, %f214;
	mul.rn.f32 	%f217, %f192, %f370;
	mul.rn.f32 	%f219, %f192, %f371;
	add.f32 	%f220, %f217, %f213;
	sub.f32 	%f221, %f217, %f220;
	add.f32 	%f222, %f213, %f221;
	add.f32 	%f223, %f215, %f222;
	add.f32 	%f224, %f219, %f223;
	add.f32 	%f225, %f220, %f224;
	sub.f32 	%f226, %f220, %f225;
	add.f32 	%f227, %f224, %f226;
	mul.rn.f32 	%f229, %f366, %f225;
	neg.f32 	%f230, %f229;
	fma.rn.f32 	%f231, %f366, %f225, %f230;
	fma.rn.f32 	%f232, %f366, %f227, %f231;
	fma.rn.f32 	%f234, %f372, %f225, %f232;
	add.rn.f32 	%f235, %f229, %f234;
	neg.f32 	%f236, %f235;
	add.rn.f32 	%f237, %f229, %f236;
	add.rn.f32 	%f238, %f237, %f234;
	mov.b32 	 %r36, %f235;
	setp.eq.s32	%p21, %r36, 1118925336;
	add.s32 	%r37, %r36, -1;
	mov.b32 	 %f239, %r37;
	add.f32 	%f240, %f238, 0f37000000;
	selp.f32	%f241, %f239, %f235, %p21;
	selp.f32	%f18, %f240, %f238, %p21;
	mul.f32 	%f242, %f241, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f243, %f242;
	fma.rn.f32 	%f245, %f243, %f373, %f241;
	fma.rn.f32 	%f247, %f243, %f374, %f245;
	mul.f32 	%f248, %f247, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f249, %f248;
	add.f32 	%f250, %f243, 0f00000000;
	ex2.approx.f32 	%f251, %f250;
	mul.f32 	%f252, %f249, %f251;
	setp.lt.f32	%p22, %f241, 0fC2D20000;
	selp.f32	%f253, 0f00000000, %f252, %p22;
	setp.gt.f32	%p23, %f241, 0f42D20000;
	selp.f32	%f392, 0f7F800000, %f253, %p23;
	setp.eq.f32	%p24, %f392, 0f7F800000;
	@%p24 bra 	BB0_13;

	fma.rn.f32 	%f392, %f392, %f18, %f392;

BB0_13:
	setp.lt.f32	%p25, %f2, 0f00000000;
	and.pred  	%p2, %p25, %p11;
	mov.b32 	 %r38, %f392;
	xor.b32  	%r39, %r38, -2147483648;
	mov.b32 	 %f254, %r39;
	selp.f32	%f394, %f254, %f392, %p2;
	setp.eq.f32	%p27, %f2, 0f00000000;
	@%p27 bra 	BB0_16;
	bra.uni 	BB0_14;

BB0_16:
	add.f32 	%f257, %f2, %f2;
	selp.f32	%f394, %f257, 0f00000000, %p11;
	bra.uni 	BB0_17;

BB0_14:
	setp.geu.f32	%p28, %f2, 0f00000000;
	@%p28 bra 	BB0_17;

	mov.f32 	%f387, 0f3ED55555;
	cvt.rzi.f32.f32	%f256, %f387;
	setp.neu.f32	%p29, %f256, 0f3ED55555;
	selp.f32	%f394, 0f7FFFFFFF, %f394, %p29;

BB0_17:
	add.f32 	%f258, %f17, 0f3ED55555;
	mov.b32 	 %r40, %f258;
	setp.lt.s32	%p31, %r40, 2139095040;
	@%p31 bra 	BB0_22;

	setp.gtu.f32	%p32, %f17, 0f7F800000;
	@%p32 bra 	BB0_21;
	bra.uni 	BB0_19;

BB0_21:
	add.f32 	%f394, %f2, 0f3ED55555;
	bra.uni 	BB0_22;

BB0_19:
	setp.neu.f32	%p33, %f17, 0f7F800000;
	@%p33 bra 	BB0_22;

	selp.f32	%f394, 0fFF800000, 0f7F800000, %p2;

BB0_22:
	mov.f32 	%f383, 0fB5BFBE8E;
	mov.f32 	%f382, 0fBF317200;
	mov.f32 	%f381, 0f00000000;
	mov.f32 	%f380, 0f35BFBE8E;
	mov.f32 	%f379, 0f3F317200;
	mov.f32 	%f378, 0f3DAAAABD;
	mov.f32 	%f377, 0f3C4CAF63;
	mov.f32 	%f376, 0f3B18F0FE;
	mov.f32 	%f375, 0f3ED55555;
	abs.f32 	%f29, %f3;
	setp.lt.f32	%p34, %f29, 0f00800000;
	mul.f32 	%f261, %f29, 0f4B800000;
	selp.f32	%f262, 0fC3170000, 0fC2FE0000, %p34;
	selp.f32	%f263, %f261, %f29, %p34;
	mov.b32 	 %r41, %f263;
	and.b32  	%r42, %r41, 8388607;
	or.b32  	%r43, %r42, 1065353216;
	mov.b32 	 %f264, %r43;
	shr.u32 	%r44, %r41, 23;
	cvt.rn.f32.u32	%f265, %r44;
	add.f32 	%f266, %f262, %f265;
	setp.gt.f32	%p35, %f264, 0f3FB504F3;
	mul.f32 	%f267, %f264, 0f3F000000;
	add.f32 	%f268, %f266, 0f3F800000;
	selp.f32	%f269, %f267, %f264, %p35;
	selp.f32	%f270, %f268, %f266, %p35;
	add.f32 	%f271, %f269, 0fBF800000;
	add.f32 	%f260, %f269, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f259,%f260;
	// inline asm
	add.f32 	%f272, %f271, %f271;
	mul.f32 	%f273, %f259, %f272;
	mul.f32 	%f274, %f273, %f273;
	fma.rn.f32 	%f277, %f376, %f274, %f377;
	fma.rn.f32 	%f279, %f277, %f274, %f378;
	mul.rn.f32 	%f280, %f279, %f274;
	mul.rn.f32 	%f281, %f280, %f273;
	sub.f32 	%f282, %f271, %f273;
	neg.f32 	%f283, %f273;
	add.f32 	%f284, %f282, %f282;
	fma.rn.f32 	%f285, %f283, %f271, %f284;
	mul.rn.f32 	%f286, %f259, %f285;
	add.f32 	%f287, %f281, %f273;
	sub.f32 	%f288, %f273, %f287;
	add.f32 	%f289, %f281, %f288;
	add.f32 	%f290, %f286, %f289;
	add.f32 	%f291, %f287, %f290;
	sub.f32 	%f292, %f287, %f291;
	add.f32 	%f293, %f290, %f292;
	mul.rn.f32 	%f295, %f270, %f379;
	mul.rn.f32 	%f297, %f270, %f380;
	add.f32 	%f298, %f295, %f291;
	sub.f32 	%f299, %f295, %f298;
	add.f32 	%f300, %f291, %f299;
	add.f32 	%f301, %f293, %f300;
	add.f32 	%f302, %f297, %f301;
	add.f32 	%f303, %f298, %f302;
	sub.f32 	%f304, %f298, %f303;
	add.f32 	%f305, %f302, %f304;
	mul.rn.f32 	%f307, %f375, %f303;
	neg.f32 	%f308, %f307;
	fma.rn.f32 	%f309, %f375, %f303, %f308;
	fma.rn.f32 	%f310, %f375, %f305, %f309;
	fma.rn.f32 	%f312, %f381, %f303, %f310;
	add.rn.f32 	%f313, %f307, %f312;
	neg.f32 	%f314, %f313;
	add.rn.f32 	%f315, %f307, %f314;
	add.rn.f32 	%f316, %f315, %f312;
	mov.b32 	 %r45, %f313;
	setp.eq.s32	%p36, %r45, 1118925336;
	add.s32 	%r46, %r45, -1;
	mov.b32 	 %f317, %r46;
	add.f32 	%f318, %f316, 0f37000000;
	selp.f32	%f319, %f317, %f313, %p36;
	selp.f32	%f30, %f318, %f316, %p36;
	mul.f32 	%f320, %f319, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f321, %f320;
	fma.rn.f32 	%f323, %f321, %f382, %f319;
	fma.rn.f32 	%f325, %f321, %f383, %f323;
	mul.f32 	%f326, %f325, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f327, %f326;
	add.f32 	%f328, %f321, 0f00000000;
	ex2.approx.f32 	%f329, %f328;
	mul.f32 	%f330, %f327, %f329;
	setp.lt.f32	%p37, %f319, 0fC2D20000;
	selp.f32	%f331, 0f00000000, %f330, %p37;
	setp.gt.f32	%p38, %f319, 0f42D20000;
	selp.f32	%f395, 0f7F800000, %f331, %p38;
	setp.eq.f32	%p39, %f395, 0f7F800000;
	@%p39 bra 	BB0_24;

	fma.rn.f32 	%f395, %f395, %f30, %f395;

BB0_24:
	setp.lt.f32	%p40, %f3, 0f00000000;
	and.pred  	%p3, %p40, %p11;
	mov.b32 	 %r47, %f395;
	xor.b32  	%r48, %r47, -2147483648;
	mov.b32 	 %f332, %r48;
	selp.f32	%f397, %f332, %f395, %p3;
	setp.eq.f32	%p42, %f3, 0f00000000;
	@%p42 bra 	BB0_27;
	bra.uni 	BB0_25;

BB0_27:
	add.f32 	%f335, %f3, %f3;
	selp.f32	%f397, %f335, 0f00000000, %p11;
	bra.uni 	BB0_28;

BB0_25:
	setp.geu.f32	%p43, %f3, 0f00000000;
	@%p43 bra 	BB0_28;

	mov.f32 	%f386, 0f3ED55555;
	cvt.rzi.f32.f32	%f334, %f386;
	setp.neu.f32	%p44, %f334, 0f3ED55555;
	selp.f32	%f397, 0f7FFFFFFF, %f397, %p44;

BB0_28:
	add.f32 	%f336, %f29, 0f3ED55555;
	mov.b32 	 %r49, %f336;
	setp.lt.s32	%p46, %r49, 2139095040;
	@%p46 bra 	BB0_33;

	setp.gtu.f32	%p47, %f29, 0f7F800000;
	@%p47 bra 	BB0_32;
	bra.uni 	BB0_30;

BB0_32:
	add.f32 	%f397, %f3, 0f3ED55555;
	bra.uni 	BB0_33;

BB0_30:
	setp.neu.f32	%p48, %f29, 0f7F800000;
	@%p48 bra 	BB0_33;

	selp.f32	%f397, 0fFF800000, 0f7F800000, %p3;

BB0_33:
	ld.const.u64 	%rd8, [params];
	cvta.to.global.u64 	%rd7, %rd8;
	mov.u32 	%r57, 255;
	mov.f32 	%f385, 0f3F800000;
	mov.f32 	%f384, 0f00000000;
	fma.rn.f32 	%f337, %f391, 0f3F870A3D, 0fBD6147AE;
	setp.eq.f32	%p49, %f1, 0f3F800000;
	selp.f32	%f338, 0f3F7FFFFF, %f337, %p49;
	mul.f32 	%f339, %f1, 0f414EB852;
	setp.lt.f32	%p50, %f1, 0f3B4D2E1C;
	selp.f32	%f340, %f339, %f338, %p50;
	fma.rn.f32 	%f341, %f394, 0f3F870A3D, 0fBD6147AE;
	setp.eq.f32	%p51, %f2, 0f3F800000;
	selp.f32	%f342, 0f3F7FFFFF, %f341, %p51;
	mul.f32 	%f343, %f2, 0f414EB852;
	setp.lt.f32	%p52, %f2, 0f3B4D2E1C;
	selp.f32	%f344, %f343, %f342, %p52;
	fma.rn.f32 	%f345, %f397, 0f3F870A3D, 0fBD6147AE;
	setp.eq.f32	%p53, %f3, 0f3F800000;
	selp.f32	%f346, 0f3F7FFFFF, %f345, %p53;
	mul.f32 	%f347, %f3, 0f414EB852;
	setp.lt.f32	%p54, %f3, 0f3B4D2E1C;
	selp.f32	%f348, %f347, %f346, %p54;
	min.f32 	%f350, %f340, %f385;
	max.f32 	%f352, %f384, %f350;
	mul.f32 	%f353, %f352, 0f43800000;
	cvt.rzi.u32.f32	%r50, %f353;
	min.u32 	%r52, %r50, %r57;
	min.f32 	%f354, %f344, %f385;
	max.f32 	%f355, %f384, %f354;
	mul.f32 	%f356, %f355, 0f43800000;
	cvt.rzi.u32.f32	%r53, %f356;
	min.u32 	%r54, %r53, %r57;
	min.f32 	%f357, %f348, %f385;
	max.f32 	%f358, %f384, %f357;
	mul.f32 	%f359, %f358, 0f43800000;
	cvt.rzi.u32.f32	%r55, %f359;
	min.u32 	%r56, %r55, %r57;
	shl.b64 	%rd5, %rd2, 2;
	add.s64 	%rd6, %rd7, %rd5;
	cvt.u16.u32	%rs1, %r56;
	cvt.u16.u32	%rs2, %r54;
	cvt.u16.u32	%rs3, %r52;
	mov.u16 	%rs4, 255;
	st.global.v4.u8 	[%rd6], {%rs3, %rs2, %rs1, %rs4};
	ret;
}

	// .globl	__miss__ms
.visible .entry __miss__ms(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<2>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u32 	%r1, [%rd1];
	ld.u32 	%r2, [%rd1+4];
	ld.u32 	%r3, [%rd1+8];
	// inline asm
	call _optix_set_payload_0, (%r1);
	// inline asm
	// inline asm
	call _optix_set_payload_1, (%r2);
	// inline asm
	// inline asm
	call _optix_set_payload_2, (%r3);
	// inline asm
	ret;
}

	// .globl	__closesthit__ch
.visible .entry __closesthit__ch(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<4>;


	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.b32 	 %r1, %f1;
	// inline asm
	call _optix_set_payload_0, (%r1);
	// inline asm
	mov.b32 	 %r2, %f2;
	// inline asm
	call _optix_set_payload_1, (%r2);
	// inline asm
	mov.u32 	%r3, 1065353216;
	// inline asm
	call _optix_set_payload_2, (%r3);
	// inline asm
	ret;
}


